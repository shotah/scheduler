{
  "name": "scheduler",
  "version": "1.0.0",
  "description": "p2p scheduling service",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "dev:all": "concurrently \"npm run worker:dev\" \"npm run dev\"",
    "build": "tsc && vite build",
    "preview": "vite preview",
    "worker:dev": "wrangler dev",
    "worker:deploy": "wrangler deploy",
    "pages:deploy": "npm run build && wrangler pages deploy dist",
    "setup": "npm install",
    "start": "npm run dev:all",
    "start:lan": "npm run dev:all",
    "test:connection": "curl -X POST http://127.0.0.1:8787/rooms",
    "test:worker": "node src/test/worker/manual-worker-test.js",
    "network:info": "ipconfig | findstr \"IPv4\" | findstr /V \"127.0.0.1\" | findstr /V \"169.254\" | findstr /V \"172.\"",
    "network:urls": "node -e \"const os = require('os'); const nets = os.networkInterfaces(); const ips = []; Object.keys(nets).forEach(name => { if(name.includes('WiFi') || name.includes('Ethernet') || name.includes('Wi-Fi')) { nets[name].forEach(net => { if(net.family === 'IPv4' && !net.internal && !net.address.startsWith('172.') && !net.address.startsWith('169.254')) { ips.push(net.address); } }); } }); ips.forEach(ip => { console.log(`Frontend: http://${ip}:3000`); console.log(`Worker: http://${ip}:8787`); console.log('---'); });\"",
    "upgrade": "npm prune && npm list -g npm-check-updates || npm i -g npm-check-updates && npx ncu -u && npm update",
    "upgrade:check": "npx ncu",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:e2e": "npm run test:e2e:ts",
    "test:e2e:auto": "npm run test:e2e:kill && npm run test:e2e:start-and-test",
    "test:e2e:ts": "npx tsx scripts/e2e-runner.ts",
    "test:e2e:setup": "npm run test:e2e:kill && npm run test:e2e:start",
    "test:e2e:start": "start /B npm run worker:dev && start /B npm run dev && npm run test:e2e:wait",
    "test:e2e:start-and-test": "start /B npm run worker:dev && start /B npm run dev && npm run test:e2e:wait && npm run test:e2e:run && npm run test:e2e:cleanup",
    "test:e2e:wait": "node -e \"const http = require('http'); let attempts = 0; const checkServer = (port) => new Promise(resolve => { const req = http.get('http://localhost:' + port, res => resolve(true)).on('error', () => resolve(false)); req.setTimeout(1000, () => { req.destroy(); resolve(false); }); }); const check = async () => { if (attempts++ > 30) { console.error('Servers failed to start after 30 seconds'); process.exit(1); } const [worker, frontend] = await Promise.all([checkServer(8787), checkServer(3000)]); if (worker && frontend) { console.log('Both servers ready!'); } else { console.log('Waiting for servers... (' + attempts + '/30)'); setTimeout(check, 1000); } }; check();\"",
    "test:e2e:run": "playwright test",
    "test:e2e:kill": "taskkill /F /IM node.exe 2>nul || echo No node processes killed",
    "test:e2e:cleanup": "npm run test:e2e:kill",
    "test:e2e:ui": "npm run test:e2e:setup && playwright test --ui",
    "test:all": "npm run test && npm run test:e2e",
    "test:setup": "playwright install"
  },
  "dependencies": {
    "react": "^18.3.1",
    "react-dom": "^18.3.1"
  },
  "devDependencies": {
    "@playwright/test": "^1.40.0",
    "@testing-library/jest-dom": "^6.1.4",
    "@testing-library/react": "^15.0.7",
    "@testing-library/user-event": "^14.5.1",
    "@types/jest": "^29.5.8",
    "@types/node": "^24.2.1",
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "concurrently": "^8.2.2",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "tsx": "^4.20.4",
    "typescript": "^5.2.2",
    "vite": "^7.1.2",
    "wrangler": "^4.26.0"
  }
}
